{"remainingRequest":"/Users/roylau/dev/project/blog-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/roylau/dev/project/blog-dev/theme/layouts/Layout.vue?vue&type=style&index=0&id=ed3e77b8&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/roylau/dev/project/blog-dev/theme/layouts/Layout.vue","mtime":1581264901658},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aGVtZS1jb250YWluZXIKICAubG9hZGluZy13cmFwcGVyCiAgICBwb3NpdGlvbiBhYnNvbHV0ZQogICAgei1pbmRleCAxMAogICAgdG9wIDAKICAgIGJvdHRvbSAwCiAgICBsZWZ0IDAKICAgIHJpZ2h0IDAKICAgIG1hcmdpbiBhdXRvCg=="},{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Layout.vue","sourceRoot":"theme/layouts","sourcesContent":["<template>\n    <div class=\"theme-container\">\n        <Header />\n\n        <transition-drop>\n            <div v-show=\"transitonStatus\">\n                <details>\n                    <summary>$site</summary>\n                    <pre>{{$site}}</pre>\n                </details>\n                <details>\n                    <summary>$page</summary>\n                    <pre>{{$page}}</pre>\n                </details>\n                <details>\n                    <summary>$frontmatter</summary>\n                    <pre>{{$frontmatter}}</pre>\n                </details>\n                <details>\n                    <summary>$lang</summary>\n                    <pre>{{$lang}}</pre>\n                </details>\n                <details>\n                    <summary>$localePath 当前页面的 locale 路径前缀，默认值为 /</summary>\n                    <pre>{{$localePath}}</pre>\n                </details>\n                <details>\n                    <summary>$title 用于当前页面的 title 标签的值。</summary>\n                    <pre>{{$title}}</pre>\n                </details>\n                <details>\n                    <summary>$description</summary>\n                    <pre>{{$description}}</pre>\n                </details>\n                <details>\n                    <summary>$themeConfig 即 siteConfig.themeConfig</summary>\n                    <pre>{{$themeConfig}}</pre>\n                </details>\n            </div>\n        </transition-drop>\n\n        <transition-drop delay=\"0.04\">\n            <Content v-show=\"transitonStatus\" />\n        </transition-drop>\n\n        <transition name=\"fade\">\n        \t<!-- start loading 页面 -->\n            <LoadingPage v-show=\"firstLoad\" class=\"loading-wrapper\" />\n        \t<!-- end loading 页面 -->\n        </transition>\n    </div>\n</template>\n<script>\nimport TransitionDrop from '@theme/components/Transition/Drop'\nimport TransitonStatusMixin from '@theme/mixins/TransitonStatus'\n\nimport Header from '@theme/components/Header'\nexport default {\n    mixins: [TransitonStatusMixin],\n    components: { TransitionDrop,Header },\n    data() {\n        return {\n            firstLoad: true, // 判断是否是第一次加载页面\n        }\n    },\n    computed: {\n\n    },\n    methods: {\n        /**\n         * 处理 loading (判断页面是否是第一次加载，是否显示 loading)\n         * description： 没有 sessionStorage 存储（第一次加载页面）1000 毫秒后关闭 loading\n         * \t\t\t\t 有 sessionStorage 存储（非第一次加载页面），0 毫秒关闭 loading\n         */\n        handleLoading() {\n            const _firstLoadKey = this.$page.key + \"_firstLoad\",\n                time = sessionStorage.getItem(_firstLoadKey) ? 1000 : 0\n\n            setTimeout(() => {\n                this.firstLoad = false\n                if (sessionStorage.getItem(_firstLoadKey)) sessionStorage.setItem(_firstLoadKey, false)\n            }, time)\n        }\n    },\n    mounted() {\n        this.handleLoading()\n        console.log(this.$site)\n    }\n}\n</script>\n<style lang=\"stylus\" scoped>\n.theme-container\n  .loading-wrapper\n    position absolute\n    z-index 10\n    top 0\n    bottom 0\n    left 0\n    right 0\n    margin auto\n</style>"]}]}