{"remainingRequest":"/Users/roylau/dev/project/blog-dev/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/roylau/dev/project/blog-dev/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/roylau/dev/project/blog-dev/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/roylau/dev/project/blog-dev/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/roylau/dev/project/blog-dev/src/data-base/mongodb/connections.md?vue&type=template&id=eef575ae&","dependencies":[{"path":"/Users/roylau/dev/project/blog-dev/src/data-base/mongodb/connections.md","mtime":1580971538503},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/roylau/dev/project/blog-dev/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}