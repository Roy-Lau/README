(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{37:function(t,s,n){"use strict";n.r(s);var a=n(2),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"http-server用法及帮助"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-server用法及帮助","aria-hidden":"true"}},[t._v("#")]),t._v(" http-server用法及帮助")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ hs --help\n\nusage: http-server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\noptions:\n\n  \t-p           Port to use "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \t-a           Address to use "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0.0.0.0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \t-d           Show directory listings "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \t-i           Display autoIndex "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \t-e --ext     Default "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" extension "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" none supplied "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \t-s --silent  Suppress log messages from output\n  \t--cors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   \tEnable CORS via the "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),t._v(" header\n                     \t\tOptionally provide CORS headers list separated by commas\n  \t-o "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    Open browser window after starting the server\n  \t-c           Cache "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max-age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" seconds "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("3600"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", e.g. -c10 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 10 seconds.\n\n               To disable caching, use -c-1.\n  \t-U --utc     Use UTC "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" log messages.\n\n  \t-P --proxy   Fallback proxy "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" the request cannot be resolved. e.g.: http://someurl.com\n\n  \t-S --ssl     Enable https.\n  \t-C --cert    Path to ssl cert "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: cert.pem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n  \t-K --key     Path to ssl key "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: key.pem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n\n  \t-r --robots  Respond to /robots.txt "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("User-agent: *\\nDisallow: /"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \t-h --help    Print this list and exit.\n")])])]),n("p",[n("strong",[t._v("用法：")])]),t._v(" "),n("p",[n("code",[t._v("hs")]),t._v(": 是"),n("code",[t._v("http-server")]),t._v("的简写")]),t._v(" "),n("pre",[n("code",[t._v("usage: http-server [path] [options] \t\t# path要启动项目的路径，options参数，如-p 1024 <br>\n")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ hs\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接运行hs，默认启动当前目录，监听8080端口")]),t._v("\nStarting up http-server, serving ./\nAvailable on:\n  http://127.0.0.1:8080\nHit CTRL-C to stop the server\n\n$ hs -p 1024 \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置监听端口")]),t._v("\n$ hs -a 127.0.0.1 \t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置监听的ip地址")]),t._v("\n$ hs -d \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否显示目录列表，默认为[true]")]),t._v("\n$ hs -i \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否显示 autoIndex，默认为[true]")]),t._v("\n$ hs -e  or --ext \t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置文件模板的扩展名，如：jijia2，jade，如果没有提供默认的文件扩展名(默认 'html')")]),t._v("\n$ hs -s  or --silent \t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 禁止日志信息输出")]),t._v("\n$ hs --cors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置http头，默认为Access-Control-Allow-Origin")]),t._v("\n$ hs -o  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自动唤起默认浏览器，也可以跟浏览器的路径")]),t._v("\n$ hs -c \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cache 设置最大缓存时间")]),t._v("\n$ hs -U \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示UTC格式的日志时间")]),t._v("\n$ hs -P\n$ hs -S \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动HTTPS协议(需要两个协议文件cert.pem和key.pem)")]),t._v("\n$ hs -C \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置cert.pem文件名，默认为cert.pem。启动HTTPS时需要")]),t._v("\n$ hs -K \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置key.pem文件名，默认为key.pem。启动HTTPS时需要")]),t._v("\n$ hs -r \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# robots 指定爬虫协议路径")]),t._v("\n$ hs -h \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示帮助文档")]),t._v("\n")])])])])},[],!1,null,null,null);s.default=e.exports}}]);